version: 2
jobs:
  style_checker_and_static_analysis:
    docker:
      - image: circleci/python
    steps:
      - checkout # Hace pull del repositorio en el directorio actual
      - run: sudo python -m pip install dlint
      - run: python -m flake8 --select=DUO python/ # Ejecuta flake8 con los parametros de dlint
  build:
    docker:
      - image: circleci/python
    steps:
      - checkout
      # Restaura la cache de dependencias si la "plantilla de la rama" o el requirements.txt no han cambaido desde la
      # ultima ejecucion
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run: # Instala y activa el entorno virtual python junto con las dependencias
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache: # Guarda la cache de dependencias
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - persist_to_workspace:
          # Se asigna el directorio actual al workspace para que este disponible para siguientes jobs
          root: .
          # Se a√±aden todos los subdirectorios y archivos
          paths:
            - '*'
  unit_tests:
    docker:
      - image: circleci/python
    steps:
      - attach_workspace:
          # Se adquiere el workspace del job anterior
          at: .
      - run:
          name: Ejecuta los tests unitarios
          command: |
            . venv/bin/activate
            pip install -r test-requirements.txt
            python -m pytest python/tests/

workflows:
  version: 2
  stylecheck-build-test:
    jobs:
      - style_checker_and_static_analysis
      - build:
          requires:
            - style_checker_and_static_analysis
      - unit_tests:
          requires:
            - build